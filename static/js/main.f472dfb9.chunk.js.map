{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-types.js","components/ContactForm/ContactForm.js","redux/contacts/contacts-actions.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","connect","dispatch","onSubmit","item","type","actionTypes","payload","addItem","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","wrapper","htmlFor","input","pattern","title","required","id","onChange","submitButton","Contact","record","spacing","state","contacts","filter","items","normalizedFilter","toLowerCase","visibleList","includes","onDelete","deleteItem","list","map","line","deleteButton","onClick","onFilter","event","filterLabel","App","container","headline","initialItems","combineReducers","normalizedNewName","isUnique","some","alert","contact","rootReducer","contactsReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f472dfb9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1SUgY\",\"line\":\"ContactList_line__3OFgM\",\"deleteButton\":\"ContactList_deleteButton__12WD9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1FeGQ\",\"App-logo\":\"App_App-logo__1rLcY\",\"App-logo-spin\":\"App_App-logo-spin__MATmV\",\"App-header\":\"App_App-header__37AAy\",\"App-link\":\"App_App-link__1mApL\",\"headline\":\"App_headline__3WnDg\",\"container\":\"App_container__3BjIy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1XTzz\",\"filterLabel\":\"Filter_filterLabel__1GhRM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__QJJlj\",\"wrapper\":\"ContactForm_wrapper__3bInd\",\"input\":\"ContactForm_input__j4LZi\",\"submitButton\":\"ContactForm_submitButton__3Bj76\"};","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    ADD:'contacts/Add',\r\n    DELETE:'contacts/Delete',\r\n    CHANGE_FILTER:'contacts/Filter',\r\n};\r\n\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/contacts/contacts-actions';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactForm = ({onSubmit})=> {\r\n  // state = {\r\n  //   name: '',\r\n  //   number: '',\r\n  // };\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name': setName(value);\r\n        break;\r\n      case 'number': setNumber(value);\r\n        break;\r\n      default: return;\r\n    }\r\n  };\r\n const  handleSubmit = e => {\r\n    e.preventDefault();\r\n   onSubmit({ name, number });\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n      setName('');\r\n      setNumber('');\r\n  };\r\n\r\n    return (\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <div className={s.wrapper}>\r\n          <label htmlFor={nameInputId}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              id={nameInputId}\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <label htmlFor={numberInputId}>\r\n            Phone Number\r\n            <input\r\n              className={s.input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              id={numberInputId}\r\n              value={number}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <button className={s.submitButton } type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (item) => dispatch(addItem(item)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import actionTypes from './contacts-types';\r\n\r\nexport const addItem = item => {\r\n    return {\r\n        type: actionTypes.ADD,\r\n        payload: item\r\n    }\r\n};\r\nexport const deleteItem = id => {\r\n    return {\r\n      type: actionTypes.DELETE,\r\n      payload: id,\r\n    };\r\n}\r\n\r\nexport const filterItems = name => {\r\n    return {\r\n      type: actionTypes.CHANGE_FILTER,\r\n      payload: name,\r\n    };\r\n}","import React from 'react';\r\nimport s from './Contact.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contact = ({ name, number }) => {\r\n    return (\r\n      <p className={s.record}>\r\n        <span className={s.name}> {name}</span> <span className={s.spacing}>:</span>\r\n        <span className={s.number}>{number}</span>\r\n      </p>\r\n    );\r\n}\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteItem } from '../../redux/contacts/contacts-actions';\r\nimport Contact from '../Contact/Contact';\r\nimport s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ visibleList, onDelete }) => {\r\n    return (\r\n      <ul className={s.list}>\r\n        {visibleList.map(item => (\r\n          <li key={item.id} className={s.line}>\r\n            <Contact\r\n              name={item.name}\r\n              number={item.number}\r\n              onDelete={onDelete}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className={s.deleteButton}\r\n              onClick={()=>onDelete(item.id)}\r\n            ></button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n\r\n};\r\nconst mapStateToProps = state => {\r\n  const { filter, items } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const filtered= items.filter(({name}) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  return ({\r\n    visibleList:filtered\r\n  }\r\n  )\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete:(id)=>dispatch(deleteItem(id)),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  visibleList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })),\r\n  onDelete: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { filterItems } from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({value, onFilter}) => {\r\n    return(\r\n    <label className={s.filterLabel}>\r\n        Search by name\r\n            <input type=\"text\" className={s.filter} value={value} onChange={onFilter}/>\r\n        </label>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n name: state.contacts.filter, \r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  onFilter: event => dispatch(filterItems(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n","\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport s from './App.module.css';\n\n\nconst App = () => {\n  // задаем useState для contacts и Filter\n  // для State contact - \"ленивая инициализация\". Начальное значение либо берется из localStorage,\n  // либо из initial, при этосм проверка осуществляется только при первом рендере\n  // const [contacts, setContacts] = useState(() =>\n  //   JSON.parse(window.localStorage.getItem('phonebookContacts')) ?? initial);\n  \n    return (\n      <div className={s.container}>\n        <h1 className={s.headline}>Phone book</h1>\n        <ContactForm/>\n        <h2 className={s.headline}>Contacts</h2>\n        <Filter/>\n        <ContactList/>\n      </div>\n    );\n\n}\nexport default App;\n","import actionTypes from './contacts-types';\r\nimport shortid from 'shortid';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst initialItems = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n\r\nconst items = (state = initialItems, { type, payload }) => {\r\n    switch (type) {\r\n      case actionTypes.ADD: {\r\n        const normalizedNewName = payload.name.toLowerCase();\r\n        const isUnique = !state.some(\r\n          ({ name }) => name.toLowerCase() === normalizedNewName,\r\n        );\r\n        if (!isUnique) {\r\n          alert('THIS NAME IS ALREADY PRESENT IN A PHONEBOOK');\r\n          return state;\r\n        }\r\n        payload.id = shortid.generate();\r\n        return [...state, payload];\r\n      }\r\n        case actionTypes.DELETE: {\r\n  return state.filter(\r\n    contact => contact.id !== payload);\r\n  }\r\n      default:\r\n        return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.CHANGE_FILTER: {\r\n      return payload;\r\n    }\r\n    default: return state;\r\n   }\r\n}\r\n\r\nexport default combineReducers ({ items, filter});\r\n\r\n\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\n\r\nconst persistConfig = {\r\n  key: 'phonebookContacts',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n    \r\nconst store = createStore(persistedReducer, composeWithDevTools());\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"record\":\"Contact_record__1WdVR\",\"name\":\"Contact_name__1ut3n\",\"number\":\"Contact_number__24T1f\",\"spacing\":\"Contact_spacing__WGDkt\"};"],"sourceRoot":""}